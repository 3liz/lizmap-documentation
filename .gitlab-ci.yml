stages:
  - build_pot
  - build_html
  - deploy

# CI_COMMIT_REF_NAME could be a tag name, and in this case VERSION and TX_BRANCH
# cannot be set correctly, so we don't build and deploy on tags
before_script:
  - export VERSION=$(echo -n $CI_COMMIT_REF_NAME | sed 's/^lizmap\_\([0-9][0-9]*\)\_\([0-9][0-9]*\)$/\1.\2/g')
  - if [ "$VERSION" == "master" ]; then export VERSION="next"; fi
  - if [ "$CI_COMMIT_REF_NAME" == "master" ]; then export TX_BRANCH="next"; else  export TX_BRANCH="$CI_COMMIT_REF_NAME"; fi
  - echo "VERSION=$VERSION TX_BRANCH=$TX_BRANCH"

build_pot:
  only:
    - schedules
  stage: build_pot
  script:
    - make gettext

build_and_publish_pot:
  except:
    - schedules
    - tags
  stage: build_pot
  script:
    - make gettext
    - tx push -s --no-interactive --branch $TX_BRANCH

retrieve_po_and_build:
  only:
    - schedules
  stage: build_html
  script:
    - tx pull -l es,fi,fr,it,pt,ru --branch $TX_BRANCH
    - make clean html
  artifacts:
    paths:
      - build/html/
    name: "lizmapdoc-$CI_COMMIT_REF_NAME"

build_html:
  except:
    - schedules
    - tags
  stage: build_html
  script:
    - make clean html
  artifacts:
    paths:
      - build/html/
    name: "lizmapdoc-$CI_COMMIT_REF_NAME"

deploy_snap:
  stage: deploy
  except:
    - tags
  dependencies:
    - retrieve_po_and_build
    - build_html
  script:
    - rsync -e "$DEPLOYDOC_SNAP_SSH_PARAM" -P -rvzc --delete build/html/ $DEPLOYDOC_SNAP_HOST:$DEPLOYDOC_SNAP_PATH/$VERSION/
  environment:
    name: snap

deploy_production:
  only:
    - schedules
  stage: deploy
  dependencies:
    - retrieve_po_and_build
  script:
    - rsync -e "$DEPLOYDOC_PROD_SSH_PARAM" -P -rvzc --delete build/html/ $DEPLOYDOC_PROD_HOST:$DEPLOYDOC_PROD_PATH/$VERSION/
  environment:
    name: production
  when: manual
